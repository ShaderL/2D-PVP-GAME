1.update更新，防止卡在天上。（加了个等于号）

	//第一步：移动/坐标更新
		//上下移动/坐标更新
	if (m_dir.up == accessable)
	{
		if (m_dir.down == accessable)
		{
			m_Yspeed += (m_G * deltaT) / (double)1000;
			m_basepos.y += m_Yspeed * deltaT / (double)1000;
		}
		else if (m_dir.down == unaccess)
		{
			if (m_Yspeed >= 0)
			{
				m_Yspeed = 0;
			}
			else if (m_Yspeed <= 0)
			{
				m_Yspeed += (m_G * deltaT) / (double)1000;
				m_basepos.y += m_Yspeed * deltaT / (double)1000;
			}
		}
	}
	else if (m_dir.down == accessable && m_dir.up == unaccess)
	{
		if (m_Yspeed < 0)
		{
			m_Yspeed = 0;
		}
		else if (m_Yspeed >= 0)
		{
			m_Yspeed += (m_G * deltaT) / (double)1000;
			m_basepos.y += m_Yspeed * deltaT / (double)1000;
		}
	}

2.拉回机制 (需要拉回锁机制)
     PlayerBase::PullBack(Line l1,int linedir)//linedir为该线条在碰撞箱中的位置
     CheckDirAcc()中，若检测到碰撞，则改block返回边界线条（上检测返回下线，左检测返回右线等），m_hbox调用拉回，拉回至线条处
void PlayerBase::PullBack(Line l1,int linedir)
{
      if (linedir == left && m_pblock == 0)
      {
            m_basepos.x = line.pos1.x + 50 +1;//加上人物宽度
            m_pblock = 0;//重置零拉回锁
            //y轴坐标不变
      }
      else if (linedir == right && m_pblock == 0)
     {
            m_basepos.x = line.pos1.x + 1;//不需加入人物宽度，仅加一为了分开碰撞箱
            m_pblock = 0;//重置零拉回锁
            //y轴坐标不变
     }
     else if (linedir == up && m_pblock == 0)
    {
            m_basepos.y = line.pos1.y - 1;//不需加入人物高度，仅减一为了分开碰撞箱
            m_pblock = 0;//重置拉回锁
            //x轴坐标不变
    }
    else if (linedir == down && m_pblock == 0) 
    {
            m_basepos.y = line.pos1.y - 100 - 1;//加上人物高度
            m_pblock = 0;//重置零拉回锁
            //x轴坐标不变
    }
}
























